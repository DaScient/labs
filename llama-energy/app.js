const chartColors=['#60a5fa','#f59e0b','#10b981','#ef4444'];let levelsChart,sharesChart;async function fetchState(state='VA'){const url=`/api/eia?state=${encodeURIComponent(state)}`;const res=await fetch(url,{headers:{'Accept':'application/json'}});if(!res.ok){const t=await res.text();throw new Error(`API error ${res.status}: ${t}`);}return res.json();}
function plotLevels(ctx,series,labels){if(levelsChart)levelsChart.destroy();const datasets=Object.keys(series).map((k,i)=>({label:k,data:series[k],borderColor:chartColors[i%chartColors.length],backgroundColor:chartColors[i%chartColors.length]+'55',fill:false,tension:0.2}));levelsChart=new Chart(ctx,{type:'line',data:{labels,datasets},options:{plugins:{legend:{position:'bottom'}},scales:{y:{title:{text:'MWh',display:true}}}}});}
function plotShares(ctx,shares,labels){if(sharesChart)sharesChart.destroy();const datasets=Object.keys(shares).map((k,i)=>({label:k,data:shares[k],borderColor:chartColors[i%chartColors.length],backgroundColor:chartColors[i%chartColors.length]+'55',fill:true,tension:0.2}));sharesChart=new Chart(ctx,{type:'line',data:{labels,datasets},options:{plugins:{legend:{position:'bottom'}},scales:{y:{title:{text:'% of Total Supply',display:true}}}}});}
async function load(){const state=document.getElementById('state').value;try{const payload=await fetchState(state);const {periods,levels,shares}=payload;plotLevels(document.getElementById('chartLevels'),levels,periods);plotShares(document.getElementById('chartShares'),shares,periods);}catch(e){alert(e.message);console.error(e);}}
document.getElementById('loadBtn').addEventListener('click',load);window.addEventListener('load',load);